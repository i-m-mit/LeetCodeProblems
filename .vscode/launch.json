{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "type": "java",
            "name": "CodeLens (Launch) - SortArrayByParityII",
            "request": "launch",
            "mainClass": "Array.SortArrayByParityII",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[4,2,5,7]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - HammingDistance",
            "request": "launch",
            "mainClass": "BitManipulation.HammingDistance",
            "projectName": "LeetCodeProblems_17562f4"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - DIStringMatch",
            "request": "launch",
            "mainClass": "Math.DIStringMatch",
            "projectName": "LeetCodeProblems_17562f4"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - NaryTreePostorderTraversal",
            "request": "launch",
            "mainClass": "Tree.NaryTreePostorderTraversal",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[1,null,3,2,4,null,5,6]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - NaryTreePreorderTraversal",
            "request": "launch",
            "mainClass": "Tree.NaryTreePreorderTraversal",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[1,null,3,2,4,null,5,6]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - SquaresOfSortedArray",
            "request": "launch",
            "mainClass": "Array.SquaresOfSortedArray",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[-4,-1,0,3,10]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - PeakIndexInMountainArray",
            "request": "launch",
            "mainClass": "Searching.PeakIndexInMountainArray",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[18,29,38,59,98,100,99,98,90]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - UniqueNumberOfOccurrences",
            "request": "launch",
            "mainClass": "Array.UniqueNumberOfOccurrences",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[-3,0,1,-3,1,1,1,-3,10,0]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - LuckyNumbersInMatrix",
            "request": "launch",
            "mainClass": "Array.LuckyNumbersInMatrix",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[[1,10,4,2],[9,3,8,7],[15,16,17,12]]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - IncreasingOrderSearchTree",
            "request": "launch",
            "mainClass": "Tree.IncreasingOrderSearchTree",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[5,3,6,2,4,null,8,1,null,null,null,7,9]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - AverageSalaryExcludingMinimumMaximum",
            "request": "launch",
            "mainClass": "Array.AverageSalaryExcludingMinimumMaximum",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[8000,9000,2000,3000,6000,1000]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - NumberOfStudentsDoingHomework",
            "request": "launch",
            "mainClass": "Array.NumberOfStudentsDoingHomework",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[9,8,7,6,5,4,3,2,1] [10,10,10,10,10,10,10,10,10]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - MaximumProductTwoElementsInArray",
            "request": "launch",
            "mainClass": "Array.MaximumProductTwoElementsInArray",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[3,4,5,2]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - Maximum69Number",
            "request": "launch",
            "mainClass": "Math.Maximum69Number",
            "projectName": "LeetCodeProblems_17562f4"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - RemoveOutermostParentheses",
            "request": "launch",
            "mainClass": "StringProblems.RemoveOutermostParentheses",
            "projectName": "LeetCodeProblems_17562f4"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - MergeSortedArray",
            "request": "launch",
            "mainClass": "Array.MergeSortedArray",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[1,2,3,0,0,0] [2,5,6]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - ImplementStrStr",
            "request": "launch",
            "mainClass": "StringProblems.ImplementStrStr",
            "projectName": "LeetCodeProblems_17562f4"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - ReverseInteger",
            "request": "launch",
            "mainClass": "Math.ReverseInteger",
            "projectName": "LeetCodeProblems_17562f4"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - CountPrimes",
            "request": "launch",
            "mainClass": "HashTable.CountPrimes",
            "projectName": "LeetCodeProblems_17562f4"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - FindSqrt",
            "request": "launch",
            "mainClass": "Math.FindSqrt",
            "projectName": "LeetCodeProblems_17562f4"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - RotateArray",
            "request": "launch",
            "mainClass": "Array.RotateArray",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[1,2,3,4,5,6,7]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - LongestCommonPrefix",
            "request": "launch",
            "mainClass": "StringProblems.LongestCommonPrefix",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "flower flow flight"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - FactorialTrailingZeroes",
            "request": "launch",
            "mainClass": "Math.FactorialTrailingZeroes",
            "projectName": "LeetCodeProblems_17562f4"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - ReverseBits",
            "request": "launch",
            "mainClass": "BitManipulation.ReverseBits",
            "projectName": "LeetCodeProblems_17562f4"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - PlusOne",
            "request": "launch",
            "mainClass": "Array.PlusOne",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[9]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - NumberOfOneBits",
            "request": "launch",
            "mainClass": "Common.NumberOfOneBits",
            "projectName": "LeetCodeProblems_17562f4"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - HappyNumber",
            "request": "launch",
            "mainClass": "Common.HappyNumber",
            "projectName": "LeetCodeProblems_17562f4"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - IntersectionOfTwoArraysII",
            "request": "launch",
            "mainClass": "Array.IntersectionOfTwoArraysII",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[1,2,2,3,1] [2,2,1]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - MissingNumber",
            "request": "launch",
            "mainClass": "Array.MissingNumber",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[9,6,4,2,3,5,7,0,1]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - PascalsTriangle",
            "request": "launch",
            "mainClass": "Array.PascalsTriangle",
            "projectName": "LeetCodeProblems_17562f4"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - FirstUniqueCharacterInString",
            "request": "launch",
            "mainClass": "StringProblems.FirstUniqueCharacterInString",
            "projectName": "LeetCodeProblems_17562f4"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - RomanToInteger",
            "request": "launch",
            "mainClass": "StringProblems.RomanToInteger",
            "projectName": "LeetCodeProblems_17562f4"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - ContainsDuplicate",
            "request": "launch",
            "mainClass": "Array.ContainsDuplicate",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[1,2,3,1]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - ExcelSheetColumnNumber",
            "request": "launch",
            "mainClass": "Common.ExcelSheetColumnNumber",
            "projectName": "LeetCodeProblems_17562f4"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - BestTimeToBuyStocksII",
            "request": "launch",
            "mainClass": "DynamicProgramming.BestTimeToBuyStocksII",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[7,6,4,3,1]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - ConvertSortedArrayBinarySearchTree",
            "request": "launch",
            "mainClass": "Tree.ConvertSortedArrayBinarySearchTree",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[-10,-3,0,5,9]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - ReverseString",
            "request": "launch",
            "mainClass": "Array.ReverseString",
            "projectName": "LeetCodeProblems_17562f4"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - MinimumTimeVisitingAllPoints",
            "request": "launch",
            "mainClass": "Array.MinimumTimeVisitingAllPoints",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[[1,1],[3,4],[-1,0]]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - ConvertBinaryNumberToInteger",
            "request": "launch",
            "mainClass": "LinkedList.ConvertBinaryNumberToInteger",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[1,0,1]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - RangeSumOfBST",
            "request": "launch",
            "mainClass": "Tree.RangeSumOfBST",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[10,5,15,3,7,null,18]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - FindNumbersWithEvenNumberOfDigits",
            "request": "launch",
            "mainClass": "Array.FindNumbersWithEvenNumberOfDigits",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[12,345,2,6,7896]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - SplitStringInBalancedStrings",
            "request": "launch",
            "mainClass": "StringProblems.SplitStringInBalancedStrings",
            "projectName": "LeetCodeProblems_17562f4"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - XOROperationInArray",
            "request": "launch",
            "mainClass": "Array.XOROperationInArray",
            "projectName": "LeetCodeProblems_17562f4"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - DecompressRunLengthEncodedList",
            "request": "launch",
            "mainClass": "Array.DecompressRunLengthEncodedList",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[1,2,3,4]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - NumbersSmallerThanCurrent",
            "request": "launch",
            "mainClass": "Array.NumbersSmallerThanCurrent",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[8,1,2,2,3]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - ShuffleString",
            "request": "launch",
            "mainClass": "StringProblems.ShuffleString",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "codeleet [4,5,6,7,0,2,1,3]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - NumberStepsReduceNumberToZero",
            "request": "launch",
            "mainClass": "Common.NumberStepsReduceNumberToZero",
            "projectName": "LeetCodeProblems_17562f4"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - JewelsAndStones",
            "request": "launch",
            "mainClass": "HashTable.JewelsAndStones",
            "projectName": "LeetCodeProblems_17562f4"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - NumberOfGoodPairs",
            "request": "launch",
            "mainClass": "Array.NumberOfGoodPairs",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[1,1,1,1]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - SortArrayByParity",
            "request": "launch",
            "mainClass": "Sorting.SortArrayByParity",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[3,1,2,4]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - SelfDividingNumbers",
            "request": "launch",
            "mainClass": "Common.SelfDividingNumbers",
            "projectName": "LeetCodeProblems_17562f4"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - ReplaceElementsGreatestElementOnRightSide",
            "request": "launch",
            "mainClass": "Array.ReplaceElementsGreatestElementOnRightSide",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[17,18,5,4,6,1]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - IncreasingDecreasingString",
            "request": "launch",
            "mainClass": "StringProblems.IncreasingDecreasingString",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "aaaabbbbcccc"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - FinalPricesWithSpecialDiscount",
            "request": "launch",
            "mainClass": "Array.FinalPricesWithSpecialDiscount",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[8,4,6,2,3]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - FlippingAnImage",
            "request": "launch",
            "mainClass": "Array.FlippingAnImage",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[[1,1,0],[1,0,1],[0,0,0]]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - DecryptStringAlphabetToIntegerMapping",
            "request": "launch",
            "mainClass": "StringProblems.DecryptStringAlphabetToIntegerMapping",
            "projectName": "LeetCodeProblems_17562f4"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - PartitionEqualsSubsetSum",
            "request": "launch",
            "mainClass": "DynamicProgramming.PartitionEqualsSubsetSum",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[1,5,11,5]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - SubarraySumEqualsK",
            "request": "launch",
            "mainClass": "Array.SubarraySumEqualsK",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[1,1,1] 2"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - LowestCommonAncestor",
            "request": "launch",
            "mainClass": "Tree.LowestCommonAncestor",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[3,5,1,6,2,0,8,null,null,7,4]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - BestTimeToBuyStocks",
            "request": "launch",
            "mainClass": "DynamicProgramming.BestTimeToBuyStocks",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[1,2,3,0,2]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - TargetSum",
            "request": "launch",
            "mainClass": "DynamicProgramming.TargetSum",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[1,1,1,1,1] 3"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - LetterCombinationOnPhone",
            "request": "launch",
            "mainClass": "Common.LetterCombinationOnPhone",
            "projectName": "LeetCodeProblems_17562f4"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - NumberOfIslands",
            "request": "launch",
            "mainClass": "Common.NumberOfIslands",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[['1','1','1','1','0'],['1','1','0','1','0'],['1','1','0','0','0'],['0','0','0','0','0']]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - SortColors",
            "request": "launch",
            "mainClass": "Sorting.SortColors",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[2,0,2,1,1,0]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - TreeFromPreorderAndInorder",
            "request": "launch",
            "mainClass": "Tree.TreeFromPreorderAndInorder",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[3,9,20,15,7] [9,3,15,20,7]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - TaskScheduler",
            "request": "launch",
            "mainClass": "Queue.TaskScheduler",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[A,A,A,B,B,B] 2"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - Trie",
            "request": "launch",
            "mainClass": "Tree.Trie",
            "projectName": "LeetCodeProblems_17562f4"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - FlattenBTreeToLinkedList",
            "request": "launch",
            "mainClass": "Tree.FlattenBTreeToLinkedList",
            "projectName": "LeetCodeProblems_17562f4",
            "args": "[1,2,5,3,4,null,6]"
        },
        {
            "type": "java",
            "name": "Debug (Launch) - StringDecoder",
            "request": "launch",
            "mainClass": "StringProblems.StringDecoder",
            "args": "3[a]2[bc]"
        },
        {
            "type": "java",
            "name": "Debug (Launch) - HouseRobberThree",
            "request": "launch",
            "mainClass": "DynamicProgramming.HouseRobberThree",
            "args": "[3,2,3,null,3,null,1]"
        },
        {
            "type": "java",
            "name": "Debug (Launch) - HouseRobberTwo",
            "request": "launch",
            "mainClass": "DynamicProgramming.HouseRobberTwo",
            "args": "[1,2,3,1]"
        },
        {
            "type": "java",
            "name": "Debug (Launch) - ContainerWithMostWater",
            "request": "launch",
            "mainClass": "Array.ContainerWithMostWater",
            "args": "[1,3,2,5,25,24,5]"
        },
        {
            "type": "java",
            "name": "Debug (Launch) - UniquePaths",
            "request": "launch",
            "mainClass": "DynamicProgramming.UniquePaths",
            "args": "19 12"
        },
        {
            "type": "java",
            "name": "Debug (Launch) - MinimumPathSum",
            "request": "launch",
            "mainClass": "DynamicProgramming.MinimumPathSum",
            "args": "[[1,3,1],[1,5,1],[4,2,1]]"
        },
        {
            "type": "java",
            "name": "Debug (Launch) - BinaryTreeLevelOrderTraversal",
            "request": "launch",
            "mainClass": "Tree.BinaryTreeLevelOrderTraversal",
            "args": "[3,9,20,null,null,15,7]"
        },
        {
            "type": "java",
            "name": "Debug (Launch) - KthLargestElement",
            "request": "launch",
            "mainClass": "Array.KthLargestElement",
            "args": "[3,2,1,5,6,4] 2"
        },
        {
            "type": "java",
            "name": "Debug (Launch) - FindDuplicate",
            "request": "launch",
            "mainClass": "Array.FindDuplicate",
            "args": "[1,3,4,2,2]"
        },
        {
            "type": "java",
            "name": "Debug (Launch) - RotateImage",
            "request": "launch",
            "mainClass": "Array.RotateImage",
            "args": "[[1,2,3],[4,5,6],[7,8,9]]"
        },
        {
            "type": "java",
            "name": "Debug (Launch) - GroupAnagrams",
            "request": "launch",
            "mainClass": "StringProblems.GroupAnagrams",
            "args": "eat tea tan ate nat bat"
        },
        {
            "type": "java",
            "name": "Debug (Launch) - KthSmallestElement",
            "request": "launch",
            "mainClass": "Tree.KthSmallestElement",
            "args": "[3,1,4,null,2] 2"
        },
        {
            "type": "java",
            "name": "Debug (Launch) - ProductExceptSelf",
            "request": "launch",
            "mainClass": "Array.ProductExceptSelf",
            "args": "[1,2,3,4]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - TopKFrequentElements",
            "request": "launch",
            "mainClass": "Common.TopKFrequentElements",
            "projectName": "LeetCode_bdde8d20"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - PalindromicSubstring",
            "request": "launch",
            "mainClass": "StringProblems.PalindromicSubstring",
            "projectName": "LeetCode_bdde8d20"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - PalindromicSubstring",
            "request": "launch",
            "mainClass": "Common.PalindromicSubstring",
            "projectName": "LeetCode_bdde8d20"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - TopKFrequentElements",
            "request": "launch",
            "mainClass": "Array.TopKFrequentElements",
            "projectName": "LeetCode_bdde8d20",
            "args": "[1,1,1,2,2,3] 2"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - Subsets",
            "request": "launch",
            "mainClass": "Common.Subsets",
            "projectName": "LeetCode_bdde8d20",
            "args": "[1,2,3,4]"
        },
        {
            "type": "java",
            "name": "CodeLens (Launch) - GenerateParantheses",
            "request": "launch",
            "mainClass": "Common.GenerateParantheses",
            "projectName": "LeetCode_bdde8d20"
        },
        {
            "type": "java",
            "name": "Debug (Launch)-Permutations<LeetCode_bdde8d20>",
            "request": "launch",
            "mainClass": "Common.Permutations",
            "args": "[1,2,3,4]"
        },
        {
            "type": "java",
            "name": "Debug (Launch)-BinaryTreeTraverse<LeetCode_bdde8d20>",
            "request": "launch",
            "mainClass": "Tree.BinaryTreeTraverse",
            "args": "[1,null,2,3]"
        },
        {
            "type": "java",
            "name": "Debug (Launch) - Current File",
            "request": "launch",
            "mainClass": "${file}"
        },
        {
            "type": "java",
            "name": "Debug (Launch)-UnsortedSubArray<LeetCode_bdde8d20>",
            "request": "launch",
            "mainClass": "Array.UnsortedSubArray",
            "projectName": "LeetCode_bdde8d20"
        },
        {
            "type": "java",
            "name": "Debug (Launch)-CountingBits<LeetCode_bdde8d20>",
            "request": "launch",
            "mainClass": "Common.CountingBits",
            "projectName": "LeetCode_bdde8d20"
        },
        {
            "type": "java",
            "name": "Debug (Launch)-ValidParantheses<LeetCode_bdde8d20>",
            "request": "launch",
            "mainClass": "Common.ValidParantheses",
            "projectName": "LeetCode_bdde8d20"
        },
        {
            "type": "java",
            "name": "Debug (Launch)-ListNode<LeetCode_bdde8d20>",
            "request": "launch",
            "mainClass": "CommonDS.ListNode",
            "projectName": "LeetCode_bdde8d20"
        },
        {
            "type": "java",
            "name": "Debug (Launch)-DailyTempareture<LeetCode_bdde8d20>",
            "request": "launch",
            "mainClass": "DynamicProgramming.DailyTempareture",
            "projectName": "LeetCode_bdde8d20",
            "args": "[73,74,75,71,69,72,76,73]"
        },
        {
            "type": "java",
            "name": "Debug (Launch)-PalindromList<LeetCode_bdde8d20>",
            "request": "launch",
            "mainClass": "LinkedList.PalindromList",
            "projectName": "LeetCode_bdde8d20"
        },
        {
            "type": "java",
            "name": "Debug (Launch)-Solution<LeetCode_bdde8d20>",
            "request": "launch",
            "mainClass": "SingleElementInSortedArray.Solution",
            "projectName": "LeetCode_bdde8d20"
        },
        {
            "type": "java",
            "name": "Debug (Launch)-QueueReconstruction<LeetCode_bdde8d20>",
            "request": "launch",
            "mainClass": "Sorting.QueueReconstruction",
            "projectName": "LeetCode_bdde8d20",
            "args": "1 2 3 4"
        },
        {
            "type": "java",
            "name": "Debug (Launch)-MinStack<LeetCode_bdde8d20>",
            "request": "launch",
            "mainClass": "Tree.MinStack",
            "projectName": "LeetCode_bdde8d20"
        },
        {
            "type": "java",
            "name": "Debug (Launch)-PathSum<LeetCode_bdde8d20>",
            "request": "launch",
            "mainClass": "Tree.PathSum",
            "projectName": "LeetCode_bdde8d20",
            "args": "[1,2,3,4,null,5,null,6]"
        },
        {
            "type": "java",
            "name": "Debug (Launch)-SumPaths<LeetCode_bdde8d20>",
            "request": "launch",
            "mainClass": "Tree.SumPaths",
            "projectName": "LeetCode_bdde8d20"
        }
    ]
}
